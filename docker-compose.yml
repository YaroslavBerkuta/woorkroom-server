version: "3.8"
name: "woorkroom"

services:
  # user-service:
  #   build:
  #     context: ./woorkroom-server-users
  #   container_name: user-service
  #   volumes:
  #     - ../woorkroom-server-users/:/var/www
  #   ports:
  #     - "3001:3001"
  #   env_file: ./woorkroom-server-users/.env
  #   depends_on:
  #     - db-user
  #     - rabbitmq
  #   command: sh -c "node dist/main.js"

  # gateway:
  #   build:
  #     context: ./gateway
  #   container_name: gateway
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ../gateway/:/var/www
  #   depends_on:
  #     - user-service
  #   command: sh -c "node dist/main.js"

  db-user:
    image: postgres:15
    container_name: db-user
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: rootPass
      POSTGRES_DB: db-user
    ports:
      - "5432:5432"
    volumes:
      - user_pgdata:/var/lib/postgresql/data

  db-session:
    image: postgres:15
    container_name: db-session
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: rootPass
      POSTGRES_DB: db-session
    ports:
      - "5433:5432"
    volumes:
      - session_pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Web UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: always
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

volumes:
  user_pgdata:
  session_pgdata:
  rabbitmq_data:
  redis_data:
