name: "Build and Deploy to Prod"

on:
  push:
    branches:
      - main

permissions: write-all
env:
  ENV_NAME: prod

jobs:
  task-reports:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Отримуємо всі коміти, які потрапили в поточну гілку
      - name: Get commit messages
        id: commits
        run: |
          git fetch --prune --unshallow
          commits=$(git log --pretty=format:"%s" ${{ github.event.before }}..${{ github.sha }})
          echo "commits<<EOF" >> $GITHUB_ENV
          echo "$commits" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


      # Витягуємо ключі задач з повідомлень комітів
      - name: Extract task keys from commit messages
        id: extract_keys
        run: |
          keys=$(echo "${{ env.commits }}" | grep -oE '\[([A-Za-z]+-[0-9]+)\]' | sort | uniq | tr '\n' ' ')
          echo "task_keys=$keys" >> $GITHUB_ENV

      # Готуємо base64 token для авторизації
      - name: Encode Confluence token
        run: |
          token=$(echo -n "${{ secrets.CONFLUENCE_USER }}:${{ secrets.CONFLUENCE_API_TOKEN }}" | base64 | tr -d '\n')
          echo "token=$token" >> $GITHUB_ENV


      # Формуємо звіт і відправляємо в Confluence
      - name: Create Confluence report
        run: |
          report="<h3>Deploy Report</h3>
          <p><strong>Version:</strong> ${{ github.sha }}</p>
          <p><strong>Tasks in this build:</strong> ${{ env.task_keys }}</p>"

          curl --location 'https://fanscrm.atlassian.net/wiki/api/v2/pages' \
            --header 'Content-Type: application/json' \
            --header 'Accept: application/json' \
            --header "Authorization: Basic ${{ env.token }}" \
            --data '{
              "spaceId": "1802243",
              "status": "current",
              "title": "Build Report for Version '${{ github.sha }}'",
              "parentId": "420642853",
              "body": {
                "representation": "storage",
                "value": "'"${report//\"/\\\"}"'"
              }
            }'

